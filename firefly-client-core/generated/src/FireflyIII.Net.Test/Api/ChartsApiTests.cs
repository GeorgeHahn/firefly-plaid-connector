/* 
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 0.10.4-modified
 * Contact: thegrumpydictator@gmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using FireflyIII.Net.Client;
using FireflyIII.Net.Api;
using FireflyIII.Net.Model;

namespace FireflyIII.Net.Test
{
    /// <summary>
    ///  Class for testing ChartsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChartsApiTests : IDisposable
    {
        private ChartsApi instance;

        public ChartsApiTests()
        {
            instance = new ChartsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChartsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ChartsApi
            //Assert.IsType(typeof(ChartsApi), instance, "instance is a ChartsApi");
        }

        
        /// <summary>
        /// Test GetChartABOverview
        /// </summary>
        [Fact]
        public void GetChartABOverviewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //DateTime start = null;
            //DateTime end = null;
            //var response = instance.GetChartABOverview(id, start, end);
            //Assert.IsType<List<ChartDataSet>> (response, "response is List<ChartDataSet>");
        }
        
        /// <summary>
        /// Test GetChartAccountExpense
        /// </summary>
        [Fact]
        public void GetChartAccountExpenseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //var response = instance.GetChartAccountExpense(start, end);
            //Assert.IsType<List<ChartDataSet>> (response, "response is List<ChartDataSet>");
        }
        
        /// <summary>
        /// Test GetChartAccountOverview
        /// </summary>
        [Fact]
        public void GetChartAccountOverviewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //var response = instance.GetChartAccountOverview(start, end);
            //Assert.IsType<List<ChartDataSet>> (response, "response is List<ChartDataSet>");
        }
        
        /// <summary>
        /// Test GetChartAccountRevenue
        /// </summary>
        [Fact]
        public void GetChartAccountRevenueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //var response = instance.GetChartAccountRevenue(start, end);
            //Assert.IsType<List<ChartDataSet>> (response, "response is List<ChartDataSet>");
        }
        
        /// <summary>
        /// Test GetChartCategoryOverview
        /// </summary>
        [Fact]
        public void GetChartCategoryOverviewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime start = null;
            //DateTime end = null;
            //var response = instance.GetChartCategoryOverview(start, end);
            //Assert.IsType<List<ChartDataSet>> (response, "response is List<ChartDataSet>");
        }
        
    }

}
