/* 
 * Firefly III API
 *
 * This is the official documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. This version of the API is live from version v4.7.9 and onwards. You may use the \"Authorize\" button to try the API below. 
 *
 * The version of the OpenAPI document: 0.10.4-modified
 * Contact: thegrumpydictator@gmail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using FireflyIII.Net.Api;
using FireflyIII.Net.Model;
using FireflyIII.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace FireflyIII.Net.Test
{
    /// <summary>
    ///  Class for testing TagCloudTag
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TagCloudTagTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TagCloudTag
        //private TagCloudTag instance;

        public TagCloudTagTests()
        {
            // TODO uncomment below to create an instance of TagCloudTag
            //instance = new TagCloudTag();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TagCloudTag
        /// </summary>
        [Fact]
        public void TagCloudTagInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TagCloudTag
            //Assert.IsInstanceOfType<TagCloudTag> (instance, "variable 'instance' is a TagCloudTag");
        }


        /// <summary>
        /// Test the property 'Tag'
        /// </summary>
        [Fact]
        public void TagTest()
        {
            // TODO unit test for the property 'Tag'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'Relative'
        /// </summary>
        [Fact]
        public void RelativeTest()
        {
            // TODO unit test for the property 'Relative'
        }

    }

}
